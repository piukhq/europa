name: ci

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    env:
      TESTING: "true"
      EUROPA_DATABASE_URI: postgresql://postgres@127.0.0.1/postgres
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - uses: actions/checkout@v3
      - uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: "."
          scanners: "vuln"
          vuln-type: library
          ignore-unfixed: true
          exit-code: 0
          severity: UNKNOWN,LOW,MEDIUM
      - uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: "."
          scanners: "vuln"
          vuln-type: library
          ignore-unfixed: true
          exit-code: 1
          severity: HIGH,CRITICAL
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: pip install pipenv
      - run: pipenv install --dev --system --deploy --ignore-pipfile
      - run: xenon --max-average A --max-modules B --max-absolute B .
      - run: pytest -v --cov-report term-missing --cov=.
      - run: flake8 .
      - run: black --line-length=120 --check .
      - run: isort --check --line-length 120 --profile black .
  release_dev:
    if: github.event_name == 'push'
    name: release_dev
    environment:
      name: dev
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v3
      - run: echo "container_tag=$(date +'%FT%H%M%SZ')" >> $GITHUB_ENV
      - uses: docker/login-action@v2
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ env.container_tag }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:latest
  release_staging:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_staging
    environment:
      name: staging
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v3
      - name: tag_check
        run: |
          if ! [[ ${{ github.event.release.tag_name }} =~ [0-9]+.[0-9]+.[0-9]+ ]]; then
            exit 1;
          fi
      - uses: docker/login-action@v2
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging-${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging
  release_production:
      if: github.event_name == 'release' && github.event.action == 'published'
      name: release_production
      environment:
        name: production
      needs: [release_staging]
      runs-on: ubuntu-latest
      container: ghcr.io/binkhq/tagbot:latest
      steps:
          - run: |-
              tagbot \
              --username binkcore \
              --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
              --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
              --tag prod-${{ github.event.release.tag_name }}
              tagbot \
              --username binkcore \
              --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
              --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
              --tag prod
