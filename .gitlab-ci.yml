stages:
  - tests
  - build
  - dev
  - staging
  - prod

complexity:
  stage: tests
  image: binkhq/python:3.8
  script:
    - pip install xenon
    - xenon --max-average A --max-modules B --max-absolute B .

tests:
  stage: tests
  image: binkhq/python:3.8
  script:
    - pip install pipenv
    - pipenv install --dev
    - export TESTING=true
    - export DB_USER=postgres
    - export DB_NAME=postgres
    - export DB_HOST=$POSTGRES_PORT_5432_TCP_ADDR
    - pipenv run pytest -v --cov-report term-missing --cov=.
  variables:
    POSTGRES_HOST_AUTH_METHOD: trust
  services:
    - postgres:latest

style:
  stage: tests
  image: binkhq/python:3.8
  script:
    - pip install flake8
    - flake8

dev:
  stage: dev
  image: docker:latest
  environment:
    name: dev
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="develop-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/europa:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/europa:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/europa:$CTAG"
  only:
    - develop

build-master:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/europa:$CI_COMMIT_TAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/europa:$CI_COMMIT_TAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/europa:$CI_COMMIT_TAG"
  only:
    - tags

staging:
  stage: staging
  image: binkops.azurecr.io/tagbot:latest
  environment:
    name: staging
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/europa:$CI_COMMIT_TAG" --tag "staging-$CI_COMMIT_TAG"
  only:
    - tags

prod:
  stage: prod
  image: binkops.azurecr.io/tagbot:latest
  environment:
    name: prod
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/europa:$CI_COMMIT_TAG" --tag "prod-$CI_COMMIT_TAG"
  when: manual
  only:
    - tags
